name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0

      # Step 4: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 5: Make the gradlew file executable
      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      # Step 6: Ensure google-services.json exists (if used)
      - name: Create google-services.json
        if: ${{ secrets.GOOGLE_SERVICES_JSON != '' }}
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > app/google-services.json

      # Step 7: Verify dependency resolution (optional for debugging)
      - name: Verify Dependency Resolution
        run: ./gradlew dependencies --configuration debugUnitTestRuntimeClasspath

      # Step 8: Run Gradle Unit Tests
      - name: Run Unit Tests
        run: ./gradlew test --info